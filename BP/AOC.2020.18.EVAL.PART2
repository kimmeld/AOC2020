SUBROUTINE AOC.2020.18.EVAL.PART2(RESULT, EVAL.TEXT)

* CRT 'Processing ':EVAL.TEXT
* Tokenize the line
EVAL.EXPR = ''
N.CHARS = LEN(EVAL.TEXT)
FOR X = 1 TO N.CHARS
  IF EVAL.TEXT[X,1] <> ' ' THEN
    EVAL.EXPR<-1> = EVAL.TEXT[X,1]
  END
NEXT X

* Process brackets
NEW.EXPR = ''
N.TOKENS = DCOUNT(EVAL.EXPR,@FM)
FOR X = 1 TO N.TOKENS
  IF EVAL.EXPR<X> = '(' THEN
    POS = 0
    DEPTH = 1
    LOOP
      POS += 1
    UNTIL DEPTH = 0
      IF EVAL.EXPR<X+POS> = '(' THEN
        DEPTH += 1
      END
      IF EVAL.EXPR<X+POS> = ')' THEN
        DEPTH -= 1
      END
    REPEAT
    SUB.EXPR = ''
    FOR Y = X+1 TO X+POS-2
      SUB.EXPR := EVAL.EXPR<Y>
    NEXT Y
    THIS.RESULT = 0
    CALL AOC.2020.18.EVAL.PART2(THIS.RESULT, SUB.EXPR)
    NEW.EXPR<-1> = THIS.RESULT
    X += POS - 1
  END
  ELSE
    NEW.EXPR<-1> = EVAL.EXPR<X>
  END
NEXT X
EVAL.EXPR = NEW.EXPR
* CRT 'After subs = ':CHANGE(EVAL.EXPR,@FM,',')

* Process +
N.TOKENS = DCOUNT(EVAL.EXPR,@FM)
CUR.TOKEN = 0
LOOP
  CUR.TOKEN += 1
UNTIL CUR.TOKEN = N.TOKENS
  IF EVAL.EXPR<CUR.TOKEN> = '+' THEN
    EVAL.EXPR<CUR.TOKEN> = EVAL.EXPR<CUR.TOKEN-1> + EVAL.EXPR<CUR.TOKEN+1>
    DEL EVAL.EXPR<CUR.TOKEN+1>
    DEL EVAL.EXPR<CUR.TOKEN-1>
    CUR.TOKEN = 0
    N.TOKENS -= 2
  END
REPEAT

* Process *
N.TOKENS = DCOUNT(EVAL.EXPR,@FM)
CUR.TOKEN = 0
LOOP
  CUR.TOKEN += 1
UNTIL CUR.TOKEN = N.TOKENS
  IF EVAL.EXPR<CUR.TOKEN> = '*' THEN
    EVAL.EXPR<CUR.TOKEN> = EVAL.EXPR<CUR.TOKEN-1> * EVAL.EXPR<CUR.TOKEN+1>
    DEL EVAL.EXPR<CUR.TOKEN+1>
    DEL EVAL.EXPR<CUR.TOKEN-1>
    CUR.TOKEN = 0
    N.TOKENS -= 2
  END
REPEAT

RESULT = EVAL.EXPR<1>

RETURN
