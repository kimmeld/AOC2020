CALL S.GET.INPUT(2020,4,INPUT.LINES)
INPUT.LINES.COUNT = DCOUNT(INPUT.LINES,@FM)

 * Map of field names to their location in PP.DATA
PP.FIELD.MAP = "byr,iyr,eyr,hgt,hcl,ecl,pid,cid"
CONVERT ',' TO @FM IN PP.FIELD.MAP

PP.DATA = ''
PP.DATA.COUNT = 0

* Loop through each INPUT.LINE building up a passport block
* NOTE:  Going past the end of the input data to trigger the parsing code on the last iteration
THIS.PP = ''
FOR X = 1 TO INPUT.LINES.COUNT + 1
  PP.DATA.COUNT += 1
  IF INPUT.LINES<X> = '' THEN
* Blank line or end of data, parse this passport block
    CONVERT ' :' TO @FM:@VM IN THIS.PP
    THIS.PP.COUNT = DCOUNT(THIS.PP,@FM)
    FOR Y = 1 TO THIS.PP.COUNT
      FLD = THIS.PP<Y,1>
      VAL = THIS.PP<Y,2>

* Map field code to location in dyn array
      LOCATE FLD IN PP.FIELD.MAP SETTING LOC THEN
        PP.DATA<LOC,PP.DATA.COUNT> = VAL
      END
      ELSE
        CRT 'Bad field: ':FLD
      END
    NEXT
    THIS.PP = ''
  END
  ELSE
    THIS.PP<-1> = INPUT.LINES<X>
  END
NEXT

* Part 1
VALID.COUNT = 0
PP.REQUIRED.FIELDS = '1,2,3,4,5,6,7'
CONVERT ',' TO @FM IN PP.REQUIRED.FIELDS
FOR X = 1 TO PP.DATA.COUNT
  HAS.REQ.FIELDS = @TRUE
  FOR Y = 1 TO 8
    LOCATE Y IN PP.REQUIRED.FIELDS SETTING LOC THEN
      IF PP.DATA<Y,X> = '' THEN
        HAS.REQ.FIELDS = @FALSE
      END
    END
  NEXT
  IF HAS.REQ.FIELDS THEN
    VALID.COUNT += 1
  END
NEXT
CRT 'Part 1 = ':VALID.COUNT

* Part 2
VALID.ECL = 'amb,blu,brn,gry,grn,hzl,oth'
CONVERT ',' TO @FM IN VALID.ECL

VALID.COUNT = 0
FOR X = 1 TO PP.DATA.COUNT
  IS.VALID = @TRUE

* Validate byr
  BYR = PP.DATA<1,X>
  IF BYR MATCHES '4N' AND BYR >= 1920 AND BYR <= 2002 THEN
  END
  ELSE
    IS.VALID = @FALSE
  END

* validate iyr
  IYR = PP.DATA<2,X>
  IF IYR MATCHES '4N' AND IYR >= 2010 AND IYR <= 2020 THEN
  END
  ELSE
    IS.VALID = @FALSE
  END

* validate eyr
  EYR = PP.DATA<3,X>
  IF EYR MATCHES '4N' AND EYR >= 2020 AND EYR <= 2030 THEN
  END
  ELSE
    IS.VALID = @FALSE
  END

* Validate hgt
  HGT = PP.DATA<4,X>
  HGT.UNIT = HGT[2]
  HGT.VAL = HGT[1,LEN(HGT)-2]
  BEGIN CASE
    CASE HGT.UNIT = 'in'
      IF HGT.VAL >= 59 AND HGT.VAL <= 76 THEN
      END
      ELSE
        IS.VALID = @FALSE
      END
    CASE HGT.UNIT = 'cm'
      IF HGT.VAL >= 150 AND HGT.VAL <= 193 THEN
      END
      ELSE
        IS.VALID = @FALSE
      END
    CASE @TRUE
      IS.VALID = @FALSE
  END CASE

* Validate hcl
  HCL = PP.DATA<5,X>
  IF HCL[1,1] = '#' AND LEN(HCL) = 7 THEN
    FOR Y = 2 TO 7
      HCL.CHAR = HCL[Y,1]
      IF (HCL.CHAR >= 0 AND HCL.CHAR <= 9) OR (HCL.CHAR >= 'a' AND HCL.CHAR <= 'f') THEN
      END
      ELSE
        IS.VALID = @FALSE
      END
    NEXT
  END
  ELSE
    IS.VALID = @FALSE
  END

* Validate ecl
  ECL = PP.DATA<6,X>
  LOCATE ECL IN VALID.ECL SETTING LOC ELSE
    IS.VALID = @FALSE
  END

* Validate PID
  PID = PP.DATA<7,X>
  IF PID MATCHES '9N' THEN
  END
  ELSE
    IS.VALID = @FALSE
  END

  IF IS.VALID THEN
    VALID.COUNT += 1
  END
NEXT

CRT 'Part 2 = ':VALID.COUNT
