CALL S.GET.INPUT(2020,14,INPUT.LINES)
INPUT.LINES.COUNT = DCOUNT(INPUT.LINES,@FM)

OPEN 'AOC.2020.14.MEMORY' TO F.MEM ELSE
  STOP 'Cannot open AOC.2020.14.MEMORY'
END

* Part 1
CLEARFILE F.MEM
CUR.AND.MASK = 0
CUR.OR.MASK = 0
FOR X = 1 TO INPUT.LINES.COUNT
  BEGIN CASE
    CASE INPUT.LINES<X>[1,4] = 'mask'
      MASK.SPEC = INPUT.LINES<X>[8,36]
      MASK.AND.SPEC = MASK.SPEC
      CONVERT 'X10' TO '100' IN MASK.AND.SPEC
      CUR.AND.MASK = ICONV('0':MASK.AND.SPEC, 'MB')
      MASK.OR.SPEC = MASK.SPEC
      CONVERT 'X10' TO '010' IN MASK.OR.SPEC

* This is required because some values get ICONV'd to negative numbers
      CUR.OR.MASK = ICONV('00':MASK.OR.SPEC[1,18], 'MB') * 262144 + ICONV('00':MASK.OR.SPEC[19,36],'MB')

      IF CUR.OR.MASK < 0 THEN
* This shouldn't happen, but pop into the debugger if it does
        DEBUG
      END

    CASE INPUT.LINES<X>[1,3] = 'mem'
      LOC = FIELD(FIELD(INPUT.LINES<X>,'[',2),']',1)
      VALUE = FIELD(INPUT.LINES<X>, '=', 2)[2,9999]
      VALUE = BITOR(BITAND(VALUE,CUR.AND.MASK),CUR.OR.MASK)
      WRITE VALUE TO F.MEM,LOC
  END CASE
NEXT

TOTAL = 0
EXECUTE 'SELECT AOC.2020.14.MEMORY' RTNLIST L.MEMORY
DONE = @FALSE
LOOP
  READNEXT K.MEMORY FROM L.MEMORY ELSE
    DONE = @TRUE
  END
UNTIL DONE
  READ R.MEMORY FROM F.MEM,K.MEMORY THEN
    TOTAL += R.MEMORY<1>
  END
REPEAT
CRT 'Part 1 = ':TOTAL


* Part 2
* Note:  In part 2, we're just converting the address to binary and keeping it that way throughout.
*        It's just easier that way.
CLEARFILE F.MEM
CUR.MASK = ''
CUR.MASK.FLOATS = 0
FOR X = 1 TO INPUT.LINES.COUNT
  BEGIN CASE
    CASE INPUT.LINES<X>[1,4] = 'mask'
      CUR.MASK = INPUT.LINES<X>[8,36]
      CUR.MASK.FLOATS = COUNT(CUR.MASK,'X')
    CASE INPUT.LINES<X>[1,3] = 'mem'
      LOC = FIELD(FIELD(INPUT.LINES<X>,'[',2),']',1)
      VALUE = FIELD(INPUT.LINES<X>, '=', 2)[2,9999]
      BINLOC = '000000000000000000000000000000000000':OCONV(LOC,'MB')
      BINLOC = BINLOC[36]
      FOR Y = 0 TO PWR(2,CUR.MASK.FLOATS) - 1
        NEWLOC = BINLOC

        MASKPOS = '000000000000000000000000000000000000':OCONV(Y,'MB')
        MASKPOS = MASKPOS[CUR.MASK.FLOATS]
        CNT = 0
        FOR Z = 1 TO 36
          IF CUR.MASK[Z,1] = 'X' THEN
            CNT += 1
            NEWLOC[Z,1] = MASKPOS[CNT,1]
          END
          IF CUR.MASK[Z,1] = '1' THEN
            NEWLOC[Z,1] = '1'
          END
        NEXT
        WRITE VALUE TO F.MEM,NEWLOC
      NEXT

  END CASE
NEXT

TOTAL = 0
EXECUTE 'SELECT AOC.2020.14.MEMORY' RTNLIST L.MEMORY
DONE = @FALSE
LOOP
  READNEXT K.MEMORY FROM L.MEMORY ELSE
    DONE = @TRUE
  END
UNTIL DONE
  READ R.MEMORY FROM F.MEM,K.MEMORY THEN
    TOTAL += R.MEMORY<1>
  END
REPEAT
CRT 'Part 2 = ':TOTAL
