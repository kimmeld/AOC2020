CALL S.GET.INPUT(2020,8,INPUT.LINES)
INPUT.LINES.COUNT = DCOUNT(INPUT.LINES,@FM)

CONVERT ' ' TO @VM IN INPUT.LINES

* Part 1 - run as is
GOSUB RUN.VM
CRT 'Part 1 = ':ACC

* Part 2 - switch jmp/nop instructions one at a time until the program halts
ORIG.PROGRAM = INPUT.LINES
FOR X = 1 TO INPUT.LINES.COUNT
  INPUT.LINES = ORIG.PROGRAM

  TRYIT = @FALSE
  BEGIN CASE
    CASE INPUT.LINES<X,1> = 'nop'
      INPUT.LINES<X,1> = 'jmp'
      TYRIT = @TRUE
    CASE INPUT.LINES<X,1> = 'jmp'
      INPUT.LINES<X,1> = 'nop'
      TRYIT = @TRUE
  END CASE

  IF TRYIT THEN
    GOSUB RUN.VM
    IF NOT(INF.LOOP) AND HALTED THEN
      CRT 'Part 2 = ':ACC
    END
  END
NEXT
STOP

RUN.VM: 
EXECUTED.PCS = ''
PC = 1
ACC = 0

INF.LOOP = @FALSE
HALTED = @FALSE
LOOP
  LOCATE PC IN EXECUTED.PCS BY 'AR' SETTING LOC THEN
    INF.LOOP = @TRUE
  END
  ELSE
    INS PC BEFORE EXECUTED.PCS<LOC>
  END
  IF PC >= INPUT.LINES.COUNT THEN
    HALTED = @TRUE
  END
UNTIL INF.LOOP OR HALTED
  INSTRUCTION = INPUT.LINES<PC,1>
  ARG = INPUT.LINES<PC,2>

  BEGIN CASE
    CASE INSTRUCTION = 'acc'
      ACC += ARG
      PC += 1
    CASE INSTRUCTION = 'jmp'
      PC += ARG
    CASE INSTRUCTION = 'nop'
      PC += 1
  END CASE
REPEAT
RETURN
